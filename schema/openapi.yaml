openapi: "3.0.0"
info:
  version: 1.0.0
  title: Reservation
servers:
  - url: http://localhost:8080/
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [provider, client]

    CreateUserRequest:
      type: object
      required:
        - name
        - email
        - role
      properties:
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [provider, client]

    Availability:
      type: object
      properties:
        id:
          type: string
          format: uuid
        provider_id:
          type: string
          format: uuid
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time

    Appointment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        client_id:
          type: string
          format: uuid
        provider_id:
          type: string
          format: uuid
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          type: string
          enum: [reserved, confirmed]
paths:
  /users:
    post:
      summary: Create a new user (client or provider)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: Get user details
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /providers/{providerId}/availability:
    post:
      summary: Submit provider availability
      parameters:
        - name: providerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Availability'
      responses:
        '201':
          description: Availability created

  /appointments:
    get:
      summary: Get available appointment slots
      parameters:
        - name: providerId
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: A list of available appointment slots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'

    post:
      summary: Reserve an appointment slot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  format: uuid
                provider_id:
                  type: string
                  format: uuid
                availability_id:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Appointment reserved

  /appointments/{appointmentId}/confirm:
    post:
      summary: Confirm a reservation
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Reservation confirmed
